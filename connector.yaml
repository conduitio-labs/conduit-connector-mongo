version: "1.0"
specification:
  name: mongo
  summary: The MongoDB source and destination plugin for Conduit, written in Go.
  description: ""
  version: (devel)
  author: Meroxa, Inc.
  source:
    parameters:
      - name: collection
        description: |-
          Collection is the name of a collection the connector must
          write to (destination) or read from (source).
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: db
        description: DB is the name of a database the connector must work with.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: auth.auth.awsSessionToken
        description: AWSSessionToken is an AWS session token.
        type: string
        default: ""
        validations: []
      - name: auth.auth.db
        description: |-
          DB is the name of a database that contains
          the user's authentication data.
        type: string
        default: ""
        validations: []
      - name: auth.auth.mechanism
        description: Mechanism is the authentication mechanism.
        type: string
        default: ""
        validations: []
      - name: auth.auth.password
        description: Password is the user's password.
        type: string
        default: ""
        validations: []
      - name: auth.auth.tls.caFile,omitempty
        description: |-
          TLSCAFile is the path to either a single or a bundle of
          certificate authorities to trust when making a TLS connection.
        type: string
        default: ""
        validations: []
      - name: auth.auth.tls.certificateKeyFile,omitempty
        description: |-
          TLSCertificateKeyFile is the path to the client certificate
          file or the client private key file.
        type: string
        default: ""
        validations: []
      - name: auth.auth.username
        description: Username is the username.
        type: string
        default: ""
        validations: []
      - name: batchSize
        description: BatchSize is the size of a document batch.
        type: int
        default: "1000"
        validations:
          - type: greater-than
            value: "0"
          - type: less-than
            value: "100000"
      - name: orderingField
        description: |-
          OrderingField is the name of a field that is used for ordering
          collection documents when capturing a snapshot.
        type: string
        default: _id
        validations: []
      - name: snapshot
        description: |-
          Snapshot determines whether the connector will take a snapshot
          of the entire collection before starting CDC mode.
        type: bool
        default: "true"
        validations: []
      - name: urI.forceQuery
        description: append a query ('?') even if RawQuery is empty
        type: bool
        default: ""
        validations: []
      - name: urI.fragment
        description: fragment for references, without '#'
        type: string
        default: ""
        validations: []
      - name: urI.host
        description: host or host:port (see Hostname and Port methods)
        type: string
        default: ""
        validations: []
      - name: urI.omitHost
        description: do not emit empty host (authority)
        type: bool
        default: ""
        validations: []
      - name: urI.opaque
        description: encoded opaque data
        type: string
        default: ""
        validations: []
      - name: urI.path
        description: path (relative paths may omit leading slash)
        type: string
        default: ""
        validations: []
      - name: urI.rawFragment
        description: encoded fragment hint (see EscapedFragment method)
        type: string
        default: ""
        validations: []
      - name: urI.rawPath
        description: encoded path hint (see EscapedPath method)
        type: string
        default: ""
        validations: []
      - name: urI.rawQuery
        description: encoded query values, without '?'
        type: string
        default: ""
        validations: []
      - name: urI.scheme
        description: ""
        type: string
        default: ""
        validations: []
      - name: uri
        description: |-
          URI is the connection string.
          The URI can contain host names, IPv4/IPv6 literals, or an SRV record.
        type: string
        default: mongodb://localhost:27017
        validations: []
      - name: sdk.batch.delay
        description: Maximum delay before an incomplete batch is read from the source.
        type: duration
        default: "0"
        validations: []
      - name: sdk.batch.size
        description: Maximum size of batch before it gets read from the source.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.schema.context.enabled
        description: |-
          Specifies whether to use a schema context name. If set to false, no schema context name will
          be used, and schemas will be saved with the subject name specified in the connector
          (not safe because of name conflicts).
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.context.name
        description: |-
          Schema context name to be used. Used as a prefix for all schema subject names.
          If empty, defaults to the connector ID.
        type: string
        default: ""
        validations: []
      - name: sdk.schema.extract.key.enabled
        description: Whether to extract and encode the record key with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.key.subject
        description: |-
          The subject of the key schema. If the record metadata contains the field
          "opencdc.collection" it is prepended to the subject name and separated
          with a dot.
        type: string
        default: key
        validations: []
      - name: sdk.schema.extract.payload.enabled
        description: Whether to extract and encode the record payload with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.payload.subject
        description: |-
          The subject of the payload schema. If the record metadata contains the
          field "opencdc.collection" it is prepended to the subject name and
          separated with a dot.
        type: string
        default: payload
        validations: []
      - name: sdk.schema.extract.type
        description: The type of the payload schema.
        type: string
        default: avro
        validations:
          - type: inclusion
            value: avro
  destination:
    parameters:
      - name: collection
        description: |-
          Collection is the name of a collection the connector must
          write to (destination) or read from (source).
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: db
        description: DB is the name of a database the connector must work with.
        type: string
        default: ""
        validations:
          - type: required
            value: ""
      - name: auth.auth.awsSessionToken
        description: AWSSessionToken is an AWS session token.
        type: string
        default: ""
        validations: []
      - name: auth.auth.db
        description: |-
          DB is the name of a database that contains
          the user's authentication data.
        type: string
        default: ""
        validations: []
      - name: auth.auth.mechanism
        description: Mechanism is the authentication mechanism.
        type: string
        default: ""
        validations: []
      - name: auth.auth.password
        description: Password is the user's password.
        type: string
        default: ""
        validations: []
      - name: auth.auth.tls.caFile,omitempty
        description: |-
          TLSCAFile is the path to either a single or a bundle of
          certificate authorities to trust when making a TLS connection.
        type: string
        default: ""
        validations: []
      - name: auth.auth.tls.certificateKeyFile,omitempty
        description: |-
          TLSCertificateKeyFile is the path to the client certificate
          file or the client private key file.
        type: string
        default: ""
        validations: []
      - name: auth.auth.username
        description: Username is the username.
        type: string
        default: ""
        validations: []
      - name: urI.forceQuery
        description: append a query ('?') even if RawQuery is empty
        type: bool
        default: ""
        validations: []
      - name: urI.fragment
        description: fragment for references, without '#'
        type: string
        default: ""
        validations: []
      - name: urI.host
        description: host or host:port (see Hostname and Port methods)
        type: string
        default: ""
        validations: []
      - name: urI.omitHost
        description: do not emit empty host (authority)
        type: bool
        default: ""
        validations: []
      - name: urI.opaque
        description: encoded opaque data
        type: string
        default: ""
        validations: []
      - name: urI.path
        description: path (relative paths may omit leading slash)
        type: string
        default: ""
        validations: []
      - name: urI.rawFragment
        description: encoded fragment hint (see EscapedFragment method)
        type: string
        default: ""
        validations: []
      - name: urI.rawPath
        description: encoded path hint (see EscapedPath method)
        type: string
        default: ""
        validations: []
      - name: urI.rawQuery
        description: encoded query values, without '?'
        type: string
        default: ""
        validations: []
      - name: urI.scheme
        description: ""
        type: string
        default: ""
        validations: []
      - name: uri
        description: |-
          URI is the connection string.
          The URI can contain host names, IPv4/IPv6 literals, or an SRV record.
        type: string
        default: mongodb://localhost:27017
        validations: []
      - name: sdk.batch.delay
        description: Maximum delay before an incomplete batch is written to the destination.
        type: duration
        default: "0"
        validations: []
      - name: sdk.batch.size
        description: Maximum size of batch before it gets written to the destination.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.rate.burst
        description: |-
          Allow bursts of at most X records (0 or less means that bursts are not
          limited). Only takes effect if a rate limit per second is set. Note that
          if `sdk.batch.size` is bigger than `sdk.rate.burst`, the effective batch
          size will be equal to `sdk.rate.burst`.
        type: int
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.rate.perSecond
        description: Maximum number of records written per second (0 means no rate limit).
        type: float
        default: "0"
        validations:
          - type: greater-than
            value: "-1"
      - name: sdk.record.format
        description: |-
          The format of the output record. See the Conduit documentation for a full
          list of supported formats (https://conduit.io/docs/using/connectors/configuration-parameters/output-format).
        type: string
        default: opencdc/json
        validations: []
      - name: sdk.record.format.options
        description: |-
          Options to configure the chosen output record format. Options are normally
          key=value pairs separated with comma (e.g. opt1=val2,opt2=val2), except
          for the `template` record format, where options are a Go template.
        type: string
        default: ""
        validations: []
      - name: sdk.schema.extract.key.enabled
        description: Whether to extract and decode the record key with a schema.
        type: bool
        default: "true"
        validations: []
      - name: sdk.schema.extract.payload.enabled
        description: Whether to extract and decode the record payload with a schema.
        type: bool
        default: "true"
        validations: []
